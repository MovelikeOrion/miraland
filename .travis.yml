branches:
  only:
    - master
    - /^v\d+\.\d+/

notifications:
  email: false
  slack:
    on_success: change
    if: NOT type = pull_request
    secure: 

os: linux
dist: bionic
language: minimal

jobs:
  include:
    - &release-artifacts
      if: type IN (api, cron) OR tag IS present
      name: "macOS release artifacts"
      os: osx
      osx_image: xcode12
      language: rust
      rust:
        - stable
      install:
        - source ci/rust-version.sh
        - PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
        - readlink -f .
        - brew install gnu-tar
        - PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
        - tar --version
      script:
        - source ci/env.sh
        - rustup set profile default
        - ci/publish-tarball.sh
      deploy:
        - provider: s3
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          bucket: release.miraland.top
          region: us-west-1
          skip_cleanup: true
          acl: public_read
          local_dir: travis-s3-upload
          on:
            all_branches: true
        - provider: releases
          token: $GITHUB_TOKEN
          skip_cleanup: true
          file_glob: true
          file: travis-release-upload/*
          on:
            tags: true
    - <<: *release-artifacts
      name: "Windows release artifacts"
      os: windows
      install:
        - choco install openssl
        - export OPENSSL_DIR="C:\Program Files\OpenSSL-Win64"
        - source ci/rust-version.sh
        - PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
        - readlink -f .
    #  Linux release artifacts are still built by ci/buildkite-secondary.yml
    #- <<: *release-artifacts
    #  name: "Linux release artifacts"
    #  os: linux
    #  before_install:
    #    - sudo apt-get install libssl-dev libudev-dev

    # docs pull request
    - name: "docs"
      if: type IN (push, pull_request) OR tag IS present
      language: node_js
      node_js:
        - "lts/*"

      services:
        - docker

      cache:
        directories:
          - ~/.npm

      before_install:
        - source ci/env.sh
        - .travis/channel_restriction.sh edge beta || travis_terminate 0
        - .travis/affects.sh docs/ .travis || travis_terminate 0
        - cd docs/
        - source .travis/before_install.sh

      script:
        - source .travis/script.sh
